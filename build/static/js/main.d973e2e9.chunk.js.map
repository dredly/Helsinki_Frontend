{"version":3,"sources":["components/Notification.js","services/persons.js","App.js","index.js"],"names":["Notification","message","isError","infoStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","console","log","style","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Person","personObj","handleDelete","name","number","onClick","value","Filter","searchTerm","handleSearch","onChange","Form","addPerson","newName","handlePerson","newNumber","handleNumber","onSubmit","type","App","useState","persons","setPersons","setNewNumber","setNewName","setSearchTerm","infoMessage","setInfoMessage","setIsError","useEffect","personService","initialPersons","event","deletePerson","target","split","window","confirm","filter","person","personsToShow","includes","nameList","map","preventDefault","find","p","changedPerson","returnedPerson","setTimeout","catch","error","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d973e2e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n\tconst infoStyle = {\r\n\t\tcolor: 'green',\r\n\t\tbackground: 'lightgrey',\r\n\t\tfontSize: 20,\r\n\t\tborderStyle: 'solid',\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 10,\r\n\t\tmarginBottom: 10,\r\n\t}\r\n\tconsole.log(isError)\r\n\tif (isError === true) {\r\n\t\tinfoStyle.color = 'red'\r\n\t\tconsole.log(infoStyle.color)\r\n\t}\r\n\t\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div style={infoStyle}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst delet = id => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst changeNum = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\n/*\r\nconst updateAll = () => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n*/\r\n\r\nexport default { getAll, create, delet, changeNum }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst Person = ({ personObj, handleDelete }) => (\r\n\t<div>\r\n\t\t{personObj.name} {personObj.number}\r\n\t\t<button onClick={handleDelete} \r\n\t\t\tvalue={[personObj.id, personObj.name]}>delete</button>\r\n\t</div>\r\n)\r\n\r\nconst Filter = ({ searchTerm, handleSearch }) => (\r\n\t<div>\r\n\t\tfilter shown with: <input value={searchTerm} onChange={handleSearch} />\r\n\t</div>\r\n)\r\n\r\nconst Form = ({ addPerson, newName, handlePerson, newNumber, handleNumber }) => (\r\n\t<form onSubmit={addPerson}>\r\n\t\t<div>\r\n\t\t\tname: <input value={newName} onChange={handlePerson}/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tnumber: <input value={newNumber} onChange={handleNumber}/>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button type=\"submit\">add</button>\r\n\t\t</div>\r\n\t</form>\r\n)\r\n\r\nconst App = () => {\r\n\tconst [ persons, setPersons ] = useState([])\r\n\tconst [ newNumber, setNewNumber ] = useState('')\r\n\tconst [ newName, setNewName ] = useState('')\r\n\tconst [ searchTerm, setSearchTerm ] = useState('')\r\n\tconst [ infoMessage, setInfoMessage ] = useState(null)\r\n\tconst [ isError, setIsError ] = useState(false)\r\n\t\r\n\tuseEffect(() => {\r\n\t\tpersonService\r\n\t\t\t.getAll()\r\n\t\t\t\t.then(initialPersons => {\r\n\t\t\t\tsetPersons(initialPersons)\r\n\t\t\t})\r\n\t}, [])\r\n\t\r\n\tconst addPerson = (event) => {\r\n\t\tconst nameList = persons.map(person => person.name)\r\n\t\tconsole.log(nameList)\r\n\t\tevent.preventDefault()\r\n\t\tif (!nameList.includes(newName)) { \r\n\t\t\tconst personObject = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber,\r\n\t\t\t}\r\n\t\t\tpersonService\r\n\t\t\t\t.create(personObject)\r\n\t\t\t\t\t.then(returnedPerson => {\r\n\t\t\t\t\tsetIsError(false)\r\n\t\t\t\t\tsetInfoMessage(`${newName} added`)\r\n\t\t\t\t\tsetPersons(persons.concat(returnedPerson))\r\n\t\t\t\t\tsetNewName('')\r\n\t\t\t\t\tsetNewNumber('')\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetInfoMessage(null)\r\n\t\t\t\t\t}, 4000)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n\t\t\t\tconsole.log('Number to be replaced')\r\n\t\t\t\tconst person = persons.find(p => p.name === newName)\r\n\t\t\t\tconst id = person.id\r\n\t\t\t\tconst changedPerson = { ...person, number: newNumber }\r\n\t\t\t\tpersonService\r\n\t\t\t\t\t.changeNum(id, changedPerson)\r\n\t\t\t\t\t\t.then(returnedPerson => {\r\n\t\t\t\t\t\tsetIsError(false)\r\n\t\t\t\t\t\tsetInfoMessage(`${newName}s number changed to ${newNumber}`)\r\n\t\t\t\t\t\tsetPersons(persons.map(person => person.id !== id ? person : returnedPerson))\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetInfoMessage(null)\r\n\t\t\t\t\t\t}, 4000)\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tsetIsError(true)\r\n\t\t\t\t\t\tsetInfoMessage(`Information of ${newName} has already been deleted from the server`)\r\n\t\t\t\t\t\tsetPersons(persons.filter(person => person.id != id))\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetInfoMessage(null)\r\n\t\t\t\t\t\t}, 4000)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst handlePerson = (event) => {\r\n\t\tconsole.log(event.target.value)\r\n\t\tsetNewName(event.target.value)\r\n\t}\r\n\t\r\n\tconst handleNumber = (event) => {\r\n\t\tconsole.log(event.target.value)\r\n\t\tsetNewNumber(event.target.value)\r\n\t}\r\n\t\r\n\tconst handleSearch = (event) => {\r\n\t\tconsole.log(event.target.value)\r\n\t\tsetSearchTerm(event.target.value)\r\n\t}\r\n\t\r\n\tconst handleDelete = (event) => {\r\n\t\tconst deletePerson = (event.target.value).split(\",\")\r\n\t\tconst id = deletePerson[0]\r\n\t\tconst name = deletePerson[1]\r\n\t\tconsole.log(deletePerson)\r\n\t\tif (window.confirm(`Delete ${name}?`)) {\t\r\n\t\t\tpersonService.delet(id)\t\r\n\t\t\tsetPersons(persons.filter(person => person.id != id))\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst personsToShow = persons.filter(person => person.name.includes(searchTerm))\r\n\t\tconsole.log(personsToShow)\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Phonebook</h2>\r\n\t\t\t<Notification message={infoMessage} isError={isError} />\r\n\t\t\t<Filter searchTerm={searchTerm} handleSearch={handleSearch} />\r\n\t\t\t<h2>add a new</h2>\r\n\t\t\t<Form addPerson={addPerson} newName={newName} handlePerson={handlePerson} \r\n\t\t\t\tnewNumber={newNumber} handleNumber={handleNumber}/>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t\t{personsToShow.map(person => <Person key={person.name} personObj={person} handleDelete={handleDelete}/>)}\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\n\n\n"],"sourceRoot":""}